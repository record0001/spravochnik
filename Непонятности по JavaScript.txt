
new		-	в моменте когда нашел было создание нового экземпляра класса

constructor ООП	-	

капсуляция или инкапсуляция (непонятно) объекта

eventName	-	от фонаря наверное

подчеркивание впереди	-	приватный метод _приватный

зарефакторить	-	

let, var, ???	-	let локальная, var глобальная

super()		-	Суперконструктор


handleChange
handleSubmit

flexbox

css процессоры

нативный JavaScript

проотип объекта JS

инкапсуляция

что такое замыкание

свойство prototype в книжке стр. 184

	Добавляет объектам общие методы
	Любой метод добавленный к свойству prototype будет доступен всем объектам,
	которые созданны с помощью этого конструктора


typeof	-	Вызов typeof возвращает строку, содержащую информацию о типе операнда.
			a = 5 alert(typeof a) // "number"; 	a = "5" alert(typeof a) // "string"


Литералы	-	https://developer.mozilla.org/ru/docs/Web/JavaScript/Guide/Grammar_and_types
			https://ru.wikipedia.org/wiki/Литерал_(информатика)


Объекты		-	https://developer.mozilla.org/ru/docs/Web/JavaScript/Guide/Working_with_Objects#.D0.98.D1.81.D0.BF.D0.BE.D0.BB.D1.8C.D0.B7.D0.BE.D0.B2.D0.B0.D0.BD.D0.B8.D0.B5_.D0.B8.D0.BD.D0.B8.D1.86.D0.B8.D0.B0.D0.BB.D0.B8.D0.B7.D0.B0.D1.82.D0.BE.D1.80.D0.BE.D0.B2_.D0.BE.D0.B1.D1.8A.D0.B5.D0.BA.D1.82.D0.B0





объект{
имя: значение,	//	свойства объекта	имя+значение = экземпляр объекта
имя: значение,	//	свойства объекта
имя: значение,	//	свойства объекта
имя: значение,	//	свойства объекта
имя: значение,	//	свойства объекта

}

событие	-	действие над объектом
метод	-	описывает какие действия допускаетсясовершать над объектом
		Обычная функция только содержится в объекте

нужно ли в условиях циклов for while писать var

$().text() или $().html()


do while	-	как работает с do

for in

for of




target		-	всегда ссылается на элемент, в котором произошло событие

currentTarget 	-	всегда ссылается на элемент, к которому был присоединен обработчик события


use strict

Почитать про let var const


function declaration
function expression



стэйты и пропсы


































